/* Если бы мы имели дело с примитивами, то переменная b получила бы копию значения переменной a.

В случае с массивами и объектами все работает по другому. При такой операции, как вы выполнили выше, переменная b не копирует содержимое переменной a, а обе эти переменные начинают ссылаться на один и тот же массив.

На практике это означает то, что при изменении массива с помощью одной переменной, эти изменения автоматически появятся во второй переменной.

Смотрите пример: */

// let a = [1, 2, 3];
// let b = a;

// b[0] = '!'; // меняем массив из переменной b 
// console.log(a[0]); // выведет '!' - переменная a тоже поменялась 


// let a = [1, 2, 3];
// let b = a; // на объект ссылается и a, и b 


// a = 'primitive'; // запишем в a какой-то примитив 
// console.log(b); // выведет [1, 2, 3]

let arr1 = [1, 2, 3];
let arr2 = arr1;

arr1[0] = 'a';
arr2[1] = 'b';

console.log(arr1); // ['a', 'b', 3]


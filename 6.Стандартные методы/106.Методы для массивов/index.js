// Методы для массивов:

  // Метод push добавляет неограниченное количество элементов в конец массива. При этом исходный массив изменяется, а результатом возвращается новая длина массива.


  // Метод unshift добавляет неограниченное количество новых элементов в начало массива. При этом исходный массив изменяется, а результатом возвращается новая длина массива

  // let arr = [];
  // for(i = 0; i < 10; i++){
  //   arr.unshift(i + 1);
  // }
  // console.log(arr);

  // let arr = [1, 2, 3];
  // arr.unshift(4, 5, 6)
  // console.log(arr);


  //Метод shift удаляет первый элемент из массива. При этом исходный массив изменяется, а результатом метода возвращается удаленный элемент.

  //Пусть дан массив ['1', '2', '3', '4', '5', '6']. Давайте сделаем из него строку '16-25-34'. Для решения задачи используем комбинацию методов shift, pop, push и join: пробую самостоятельно

  // Моё решение
    // let arr = ['1', '2', '3', '4', '5', '6']
    // let arr2 = [];
    // for(i = 0; i < 3; i++){
    //   arr2.push(arr[0] + (arr[arr.length - 1]));
    //   arr.shift(), arr.pop();
    // }
    // let result = arr2.join('-')
    // console.log(result);

  //Решение из учебника
    //   let arr = ['1', '2', '3', '4', 
    //   '5', '6']; 
    //   let result = [];

    //   while (arr.length > 0) { // массив уменьшается в цикле пока не достигнет нуля
    //     let first = arr.shift();
    //     let last  = arr.pop();
        
    //     let str = first + last; // тут будет 
    //       строка '16', потом '25', потом '34' 
    //     result.push(str);
    //   }

    //   // После цикла в result лежит массив 
    //     ['16', '25', '34']. Сольем его в строку: 
    //   result = result.join('-');
    // console.log(result);


// let arr = [1, 2, 3];
// console.log(arr.pop());

  //Метод slice Метод slice вырезает и возвращает указанную часть массива

  /* ассив.slice(откуда отрезать, [докуда отрезать])  */
  //let arr = ['a', 'b', 'c', 'd', 'e'];
  // let sub = arr.slice(1, -1);

  // console.log(sub);

  //Удобная штука, благодаря -1, вырезается последняя часть массива, независимо от его размера

    // let arr = [1, 2, 3, 4, 5];
    // console.log(arr.slice(0, 3));
    // let sub = arr.slice(-2)
    // console.log(sub);

  
//Работа с splice

  //Метод splice удаляет или добавляет элементы в массив. Можно только удалять элементы, только добавлять или делать и то и другое одновременно. Метод очень универсальный и сложный для понимания.

  //Метод изменяет сам массив и возвращает при этом массив удаленных элементов.

  // массив.splice(откуда удаляем, сколько элементов удаляем, [вставить элемент], [вставить элемент]...);

  /* let arr = ['a', 'b', 'c', 'd', 'e'];

  arr.splice(2, 0, '1', '2', '3');
  console.log(arr); */ // ['a', 'b', '1', '2', '3', 'c', 'd', 'e'] 

// let arr = [1, 2, 3, 4, 5];
// // arr.splice(3, 0, 'a', 'b', 'c')
// // arr.splice(1, 0, 'a', 'b')
// // arr.splice(5, 2, 4,'c',5,'e')
// arr.splice(2, 2)
// console.log(arr);



//Работа с indexOf
  //Метод indexOf() возвращает первый индекс, по которому данный элемент может быть найден в массиве или -1, если такого индекса нет.
  // arr.indexOf(searchElement[, fromIndex = 0])

  // var indices = [];
  // var array = ['a', 'b', 'a', 'c', 'a', 'd'];
  // var element = 'a';
  // var idx = array.indexOf(element);
  // for (i = 0; i < array.length; i++){
  //   if (idx != -1){
  //     indices.push(idx);
  //     idx = array.indexOf(element, idx + 1 );
  //   }
  // }
  // console.log(indices);

  // let arr = [1, 2, 3, 4, 5];
  // console.log(arr.indexOf(3));



//Метод includes
// Метод includes проверяет наличие элемента в массиве.

  //массив.includes(элемент)
  let arr = [1, 2, 3, 4, 5];
  console.log(arr.includes(3)); //  выдаст true